service: garden-aid-iot-hub
provider:
    name: aws
    runtime: nodejs4.3
defaults:
  stage: dev
  region: ap-southeast-2
variableSyntax: '\${{([\s\S]+?)}}' #will be moved to defaults
package:
  include:
    - index.js
    - src
    - node_modules
  exclude:
    - tests
    - coverage
    - package.json
functions:
  checkMoistureLevel:
    handler: index.checkMoistureLevel
resources:
  Resources:
    MoistureData:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: moisture-data-${{stageName}}
        AttributeDefinitions:
          -
            AttributeName: ClientId
            AttributeType: S
          -
            AttributeName: Timestamp
            AttributeType: S
        KeySchema:
          -
            AttributeName: ClientId
            KeyType: HASH
          -
            AttributeName: Timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    SensorThing:
      Type: AWS::IoT::Thing
      Properties:
        AttributePayload:
           Attributes:
            SensorType: soil

    # AWS IoT SQL Reference
    # http://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-functions.html
    SensorThingRule:
      Type: AWS::IoT::TopicRule
      Properties:
        TopicRulePayload:
          RuleDisabled: false
          Sql: "SELECT DeviceId, Recorded, Level FROM 'garden/soil/moisture'"
          Actions:
            -
              DynamoDB:
                TableName: { Ref: MoistureData }
                HashKeyField: "ClientId"
                HashKeyValue: "${clientId()}"
                RangeKeyField: "Timestamp"
                RangeKeyValue: "${timestamp()}"
                PayloadField: "Data"
                RoleArn: { Fn::GetAtt: [ IotThingRole, Arn ] }
            -
              Lambda:
                FunctionArn: { Fn::GetAtt: [ checkMoistureLevel, Arn ] }

    SensorThingPolicy:
      Type: AWS::IoT::Policy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: ["iot:Connect"]
              Resource: ["${{sensorThingClientResource}}"]
            - Effect: "Allow"
              Action: ["iot:Publish"]
              Resource: ["${{sensorThingSoilTopicResource}}"]

    SensorPolicyPrincipalAttachmentCert:
      Type: AWS::IoT::PolicyPrincipalAttachment
      Properties:
        PolicyName: { Ref: SensorThingPolicy }
        Principal: ${{iotCertificateArn}}

    SensorThingPrincipalAttachmentCert:
      Type: "AWS::IoT::ThingPrincipalAttachment"
      Properties:
        ThingName: { Ref: SensorThing }
        Principal: ${{iotCertificateArn}}

    IotThingRole:
       Type: AWS::IAM::Role
       Properties:
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Principal:
                  Service:
                    - iot.amazonaws.com
                Action:
                  - sts:AssumeRole

    IotThingRolePolicies:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: IotThingRole_Policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: "*"
            -
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: "*"
        Roles: [{ Ref: IotThingRole }]
